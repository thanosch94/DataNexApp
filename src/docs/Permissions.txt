Δομή των Permissions στην εφαρμογή

1) Κάθε component θα περιλαμβάνει ένα αρχείο με κατάληξη .permissions.ts
2) Το αρχείο αυτό θα περιλαμβάνει ένα const με δομή enum με τα σημεία της εφαρμογής όπου μπορούν να περαστούν permissions.
3) Επίσης θα υπάρχει το componentEntityId (πχ taskEditComponentId)
4) Τέλος θα υπάρχει μία λίστα που θα ξεχωρίζει τα πεδία με βάση το AppEntityType (πχ αν είναι στοιχείο Toolbar, αν είναι api call κτλ)
Δείγμα:
export const taskEditComponentId: any = '610be778-2354-4d1c-b4e3-f0e7724f2643';

const TaskEditPermissions = {
  CanSave_Toolbar: 'CanSave_Toolbar',
  CanDelete_Toolbar: 'CanDelete_Toolbar',
  EnableTaskTypeId_Field: 'EnableTaskTypeId_Field',
  EnableStatusId_Field: 'EnableStatusId_Field',
  EnableProjectId_Field: 'EnableProjectId_Field',
  EnableAssigneeId_Field: 'EnableAssigneeId_Field',
  EnableWorkItemPriority_Field: 'EnableWorkItemPriority_Field',
  EnableDueDate_Field: 'EnableDueDate_Field',
} as const;

export const TaskEditPermissionsList: Array<AppPermissionDto> = Object.entries(
  TaskEditPermissions
).map(([key]) => {
  if (key.includes('Toolbar')) {
    return { Key: key, AppEntity: AppEntityEnum.Toolbar };
  } else if (key.includes('Field')) {
    return { Key: key, AppEntity: AppEntityEnum.ComponentField };
  } else if (key.includes('APICall')) {
    return { Key: key, AppEntity: AppEntityEnum.APICall };
  } else {
    return { Key: key, AppEntity: AppEntityEnum.Other };
  }
});

5)Σε κάθε component στο ngOnInit θα καλείται η μέθοδος GetComponentPermissions (πχ this.getComponentPermissions(TaskEditPermissionsList, this.componentId);)
  Η μέθοδος αυτή υπάρχει στο BaseComponent που κάνουν extend όλα τα components της εφαρμογής
  Θα επιστρέφει μία λίστα και με τα permissions που έχουν οριστεί και με αυτά που δεν έχουν οριστεί για το compoenent
  (Θυμίζω παραπάνω είναι οι θέσεις που μπορούν να εφαρμοστούν permissions)

